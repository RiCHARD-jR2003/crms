{"version":3,"file":"static/js/210.b98ea833.chunk.js","mappings":"wJAIM,MAAOA,UAAwBC,EAAAA,GACnC,eAAMC,GACJ,MAAMC,KAAKC,YAAY,gDACzB,CAEA,WAAMC,CAAMC,GACV,KAAM,oBAAqBC,QACzB,MAAMJ,KAAKC,YACT,oDAIJ,MAAMI,EAAY,IAAIC,yBAAyBH,EAAQI,OAEnDJ,EAAQK,WACVH,EAAUI,KAAON,EAAQK,UAG3BE,gBAAgBR,MAAMG,EACxB,E","sources":["../node_modules/@capacitor/screen-reader/src/web.ts"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { ScreenReaderPlugin, SpeakOptions } from './definitions';\n\nexport class ScreenReaderWeb extends WebPlugin implements ScreenReaderPlugin {\n  async isEnabled(): Promise<never> {\n    throw this.unavailable('This feature is not available in the browser.');\n  }\n\n  async speak(options: SpeakOptions): Promise<void> {\n    if (!('speechSynthesis' in window)) {\n      throw this.unavailable(\n        'Browser does not support the SpeechSynthesis API',\n      );\n    }\n\n    const utterance = new SpeechSynthesisUtterance(options.value);\n\n    if (options.language) {\n      utterance.lang = options.language;\n    }\n\n    speechSynthesis.speak(utterance);\n  }\n}\n"],"names":["ScreenReaderWeb","WebPlugin","isEnabled","this","unavailable","speak","options","window","utterance","SpeechSynthesisUtterance","value","language","lang","speechSynthesis"],"sourceRoot":""}